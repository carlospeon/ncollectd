=encoding UTF-8

=head1 NAME

collectd-threshold - Documentation of collectd's I<Threshold plugin>

=head1 SYNOPSIS

 LoadPlugin "threshold"
 <Plugin "threshold">
   <Metric "foo">
     WarningMin    0.00
     WarningMax 1000.00
     FailureMin    0.00
     FailureMax 1200.00
     Invert false
   </Metric>
 </Plugin>

=head1 DESCRIPTION

Starting with version C<4.3.0> I<collectd> has support for B<monitoring>. By
that we mean that the values are not only stored or sent somewhere, but that
they are judged and, if a problem is recognized, acted upon. The only action
the I<Threshold plugin> takes itself is to generate and dispatch a
I<notification>. Other plugins can register to receive notifications and
perform appropriate further actions.

Since systems and what you expect them to do differ a lot, you can configure
I<thresholds> for your values freely. This gives you a lot of flexibility but
also a lot of responsibility.

Every time a value is out of range, a notification is dispatched. This means
that the idle percentage of your CPU needs to be less then the configured
threshold only once for a notification to be generated. There's no such thing
as a moving average or similar - at least not now.

Also, all values that match a threshold are considered to be relevant or
"interesting". As a consequence collectd will issue a notification if they are
not received for B<Timeout> iterations. The B<Timeout> configuration option is
explained in section L<collectd.conf(5)/"GLOBAL OPTIONS">. If, for example,
B<Timeout> is set to "2" (the default) and some hosts sends its CPU statistics
to the server every 60 seconds, a notification will be dispatched after about
120 seconds. It may take a little longer because the timeout is checked only
once each B<Interval> on the server.

When a value comes within range again or is received after it was missing, an
"OKAY-notification" is dispatched.

=head1 CONFIGURATION

Here is a configuration example to get you started. Read below for more
information.

 LoadPlugin "threshold"
 <Plugin "threshold">
   <Metric "foo">
     Label "instance" "bar"
     WarningMin    0.00
     WarningMax 1000.00
     FailureMin    0.00
     FailureMax 1200.00
     Invert false
   </Metric>
   
   <Metric "node_network_receive_bytes_total">
     Label "device" "eth0"
     FailureMax 10000000
   </Metric>
   
   <Metric "cpu_usage_total">
     Label "state" "idle"
     Label "hostname" "localhost"
     FailureMin 10
   </Metric>
   
   <Metric "memory_usage">
     Label "type" "cached"
     Label "hostname" "localhost"
     WarningMin 100000000
   </Metric>
   
   <Metric "load5">
     Label "hostname" "localhost"
     FailureMax 4
     Hits 3
     Hysteresis 3
   </Metric>
 </Plugin>

There are one type of configuration statement: The C<Metric>, select the value 
for which a threshold should be configured.
If multiple blocks apply to the same value they apply in order.

The other statements specify the threshold to configure. They B<must> be
included in a C<Type> block. Currently the following statements are recognized:

=over 4

=item B<Metric> I<Name>

=item B<Label> I<Key> I<Value>

=item B<Annotation> I<Key> I<Value>



=item B<FailureMax> I<Value>

=item B<WarningMax> I<Value>

Sets the upper bound of acceptable values. If unset defaults to positive
infinity. If a value is greater than B<FailureMax> a B<FAILURE> notification
will be created. If the value is greater than B<WarningMax> but less than (or
equal to) B<FailureMax> a B<WARNING> notification will be created.

=item B<FailureMin> I<Value>

=item B<WarningMin> I<Value>

Sets the lower bound of acceptable values. If unset defaults to negative
infinity. If a value is less than B<FailureMin> a B<FAILURE> notification will
be created. If the value is less than B<WarningMin> but greater than (or equal
to) B<FailureMin> a B<WARNING> notification will be created.

=item B<Invert> B<true>|B<false>

If set to B<true> the range of acceptable values is inverted, i.e. values
between B<FailureMin> and B<FailureMax> (B<WarningMin> and B<WarningMax>) are
not okay. Defaults to B<false>.

=item B<Persist> B<true>|B<false>

Sets how often notifications are generated. If set to B<true> one notification
will be generated for each value that is out of the acceptable range. If set to
B<false> (the default) then a notification is only generated if a value is out
of range but the previous value was okay.

This applies to missing values, too: If set to B<true> a notification about a
missing value is generated once every B<Interval> seconds. If set to B<false>
only one such notification is generated until the value appears again.

=item B<PersistOK> B<true>|B<false>

Sets how OKAY notifications act. If set to B<true> one notification will be
generated for each value that is in the acceptable range. If set to B<false>
(the default) then a notification is only generated if a value is in range but
the previous value was not.

=item B<Hits> I<Value>

Sets the number of occurrences which the threshold must be raised before to
dispatch any notification or, in other words, the number of B<Interval>s
that the threshold must be match before dispatch any notification.

=item B<Hysteresis> I<Value>

Sets the hysteresis value for threshold. The hysteresis is a method to prevent
flapping between states, until a new received value for a previously matched
threshold down below the threshold condition (B<WarningMax>, B<FailureMin> or
everything else) minus the hysteresis value, the failure (respectively warning)
state will be keep.

=item B<Interesting> B<true>|B<false>

If set to B<true> (the default), a notification with severity C<FAILURE> will
be created when a matching value list is no longer updated and purged from the
internal cache. When this happens depends on the I<interval> of the value list
and the global B<Timeout> setting. See the B<Interval> and B<Timeout> settings
in L<collectd.conf(5)> for details. If set to B<false>, this event will be
ignored.

=back

=head1 SEE ALSO

L<collectd(1)>,
L<collectd.conf(5)>

=head1 AUTHOR

Florian Forster E<lt>octoE<nbsp>atE<nbsp>collectd.orgE<gt>
