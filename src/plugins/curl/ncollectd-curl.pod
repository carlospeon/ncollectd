=encoding UTF-8

=head1 NAME

ncollectd-curl - Documentation of ncollectd's C<curl plugin>

=head2 Plugin C<curl>

The curl plugin uses the B<libcurl> (L<http://curl.haxx.se/>) to read web pages
and the match infrastructure (the same code used by the tail plugin) to use
regular expressions with the received data.

The following example will read the current value of AMD stock from Google's
finance page and dispatch the value to collectd.

  <Plugin curl>
    <Page "stock_quotes">
      Plugin "quotes"
      URL "http://finance.google.com/finance?q=NYSE%3AAMD"
      AddressFamily "any"
      User "foo"
      Password "bar"
      Digest false
      VerifyPeer true
      VerifyHost true
      CACert "/path/to/ca.crt"
      Header "X-Custom-Header: foobar"
      Post "foo=bar"

      MeasureResponseTime false
      MeasureResponseCode false

      <Match>
        Regex "<span +class=\"pr\"[^>]*> *([0-9]*\\.[0-9]+) *</span>"
        DSType "GaugeAverage"
        # Note: `stock_value' is not a standard type.
        Type "stock_value"
        Instance "AMD"
      </Match>
    </Page>
  </Plugin>

In the B<Plugin> block, there may be one or more B<Page> blocks, each defining
a web page and one or more "matches" to be performed on the returned data. The
string argument to the B<Page> block is used as plugin instance.

The following options are valid within B<Page> blocks:

=over 4

=item B<MetricPrefix> I<prefix>

Prepends I<prefix> to the metric name in the B<Match>

=item B<Label> I<key> I<value>

Append the label I<Key>=I<Value> to the submitting metrics. Can appear
multiple time in the B<Page> block.

=item B<URL> I<URL>

URL of the web site to retrieve. Since a regular expression will be used to
extract information from this data, non-binary data is a big plus here ;)

=item B<AddressFamily> I<Type>

IP version to resolve URL to. Useful in cases when hostname in URL resolves
to both IPv4 and IPv6 addresses, and you are interested in using one of them
specifically.
Use C<ipv4> to enforce IPv4, C<ipv6> to enforce IPv6, or C<any> to keep the
default behavior of resolving addresses to all IP versions your system allows.
If C<libcurl> is compiled without IPv6 support, using C<ipv6> will result in
a warning and fallback to C<any>.
If C<Type> cannot be parsed, a warning will be printed and the whole B<Page>
block will be ignored.

=item B<User> I<Name>

Username to use if authorization is required to read the page.

=item B<Password> I<Password>

Password to use if authorization is required to read the page.

=item B<Digest> B<true>|B<false>

Enable HTTP digest authentication.

=item B<VerifyPeer> B<true>|B<false>

Enable or disable peer SSL certificate verification. See
L<http://curl.haxx.se/docs/sslcerts.html> for details. Enabled by default.

=item B<VerifyHost> B<true>|B<false>

Enable or disable peer host name verification. If enabled, the plugin checks if
the C<Common Name> or a C<Subject Alternate Name> field of the SSL certificate
matches the host name provided by the B<URL> option. If this identity check
fails, the connection is aborted. Obviously, only works when connecting to a
SSL enabled server. Enabled by default.

=item B<CACert> I<file>

File that holds one or more SSL certificates. If you want to use HTTPS you will
possibly need this option. What CA certificates come bundled with C<libcurl>
and are checked by default depends on the distribution you use.

=item B<Header> I<Header>

A HTTP header to add to the request. Multiple headers are added if this option
is specified more than once.

=item B<Post> I<Body>

Specifies that the HTTP operation should be a POST instead of a GET. The
complete data to be posted is given as the argument.  This option will usually
need to be accompanied by a B<Header> option to set an appropriate
C<Content-Type> for the post body (e.g. to
C<application/x-www-form-urlencoded>).

=item B<MeasureResponseTime> B<true>|B<false>

Measure response time for the request. If this setting is enabled, B<Match>
blocks (see below) are optional. Disabled by default.

Beware that requests will get aborted if they take too long to complete. Adjust
B<Timeout> accordingly if you expect B<MeasureResponseTime> to report such slow
requests.

This option is similar to enabling the B<TotalTime> statistic but it's
measured by collectd instead of cURL.

=item B<MeasureResponseCode> B<true>|B<false>

Measure response code for the request. If this setting is enabled, B<Match>
blocks (see below) are optional. Disabled by default.

=item B<E<lt>StatisticsE<gt>>

One B<Statistics> block can be used to specify cURL statistics to be collected
for each request to the remote web site. See the section "cURL Statistics"
above for details. If this setting is enabled, B<Match> blocks (see below) are
optional.

=item B<E<lt>MatchE<gt>>

One or more B<Match> blocks that define how to match information in the data
returned by C<libcurl>.  If the B<MeasureResponseTime> or B<MeasureResponseCode>
options are set to B<true>, B<Match> blocks are optional.

=item B<Interval> I<Interval>

Sets the interval (in seconds) in which the values will be collected from this
URL. By default the global B<Interval> setting will be used.

=item B<Timeout> I<Milliseconds>

The B<Timeout> option sets the overall timeout for HTTP requests to B<URL>, in
milliseconds. By default, the configured B<Interval> is used to set the
timeout. Prior to version 5.5.0, there was no timeout and requests could hang
indefinitely. This legacy behaviour can be achieved by setting the value of
B<Timeout> to 0.

If B<Timeout> is 0 or bigger than the B<Interval>, keep in mind that each slow
network connection will stall one read thread. Adjust the B<ReadThreads> global
setting accordingly to prevent this from blocking other plugins.

=back

Each B<Match> block has the following options to describe how the match should
be performed:

=over 4

=item B<Regex> I<regex>

Sets the regular expression to use for matching against a line. The first
subexpression has to match something that can be turned into a number by
L<strtoll(3)> or L<strtod(3)>, depending on the value of C<CounterAdd>, see
below. Because B<extended> regular expressions are used, you do not need to use
backslashes for subexpressions! If in doubt, please consult L<regex(7)>. Due to
collectd's config parsing you need to escape backslashes, though. So if you
want to match literal parentheses you need to do the following:

  Regex "SPAM \\(Score: (-?[0-9]+\\.[0-9]+)\\)"

=item B<ExcludeRegex> I<regex>

Sets an optional regular expression to use for excluding lines from the match.
An example which excludes all connections from localhost from the match:

  ExcludeRegex "127\\.0\\.0\\.1"

=item B<Metric> I<metric>

Set the metric name.

=item B<Help> I<help>

Set the B<help> text for the metric.

=item B<Label> I<key> I<value>

Append the label I<Key>=I<Value> to the submitting metrics. Can appear
multiple times in the B<Metric> block.

=item B<DSType> I<Type>

Sets how the values are cumulated. I<Type> is one of:

=over 4

=item B<GaugeAverage>

Calculate the average of all values matched during the interval.

=item B<GaugeMin>

Report the smallest value matched during the interval.

=item B<GaugeMax>

Report the greatest value matched during the interval.

=item B<GaugeLast>

Report the last value matched during the interval.

=item B<GaugePersist>

Report the last matching value. The metric is I<not> reset to C<NaN> at the end
of an interval. It is continuously reported until another value is matched.
This is intended for cases in which only state changes are reported, for
example a thermometer that only reports the temperature when it changes.

=item B<CounterSet>

=item B<DeriveSet>

=item B<AbsoluteSet>

The matched number is a counter. Simply I<sets> the internal counter to this
value. Variants exist for C<COUNTER> and C<DERIVE> data sources.

=item B<GaugeAdd>

=item B<CounterAdd>

=item B<DeriveAdd>

Add the matched value to the internal counter. In case of B<DeriveAdd>, the
matched number may be negative, which will effectively subtract from the
internal counter.

=item B<GaugeInc>

=item B<CounterInc>

=item B<DeriveInc>

Increase the internal counter by one. These B<DSType> are the only ones that do
not use the matched subexpression, but simply count the number of matched
lines. Thus, you may use a regular expression without submatch in this case.

B<GaugeInc> is reset to I<zero> after every read, unlike other B<Gauge*>
metrics which are reset to C<NaN>.

=item B<Distribution>

Type to do calculations based on the distribution of values, primarily
calculating percentiles. This is primarily geared towards latency, but can be
used for other metrics as well. The range of values tracked with this setting
must be in the range (0â€“2^34) and can be fractional. Please note that neither
zero nor 2^34 are inclusive bounds, i.e. zero I<cannot> be handled by a
distribution.

This option must be used together with the B<Percentile> and/or B<Bucket>
options.

B<Synopsis:>

  <DSType "Distribution">
    Percentile 99
    Bucket 0 100
    BucketType "bucket"
  </DSType>

=over 4

=item B<Percentile> I<Percent>

Calculate and dispatch the configured percentile, i.e. compute the value, so
that I<Percent> of all matched values are smaller than or equal to the computed
latency.

Metrics are reported with the I<type> B<Type> (the value of the above option)
and the I<type instance> C<[E<lt>InstanceE<gt>-]E<lt>PercentE<gt>>.

This option may be repeated to calculate more than one percentile.

=item B<Bucket> I<lower_bound> I<upper_bound>

Export the number of values (a C<DERIVE>) falling within the given range. Both,
I<lower_bound> and I<upper_bound> may be a fractional number, such as B<0.5>.
Each B<Bucket> option specifies an interval C<(I<lower_bound>,
I<upper_bound>]>, i.e. the range I<excludes> the lower bound and I<includes>
the upper bound. I<lower_bound> and I<upper_bound> may be zero, meaning no
lower/upper bound.

To export the entire (0â€“inf) range without overlap, use the upper bound of the
previous range as the lower bound of the following range. In other words, use
the following schema:

  Bucket   0   1
  Bucket   1   2
  Bucket   2   5
  Bucket   5  10
  Bucket  10  20
  Bucket  20  50
  Bucket  50   0

Metrics are reported with the I<type> set by B<BucketType> option (C<bucket>
by default) and the I<type instance>
C<E<lt>TypeE<gt>[-E<lt>InstanceE<gt>]-E<lt>lower_boundE<gt>_E<lt>upper_boundE<gt>>.

This option may be repeated to calculate more than one rate.

=item B<BucketType> I<Type>

Sets the type used to dispatch B<Bucket> metrics.
Optional, by default C<bucket> will be used.

=back

=head2 cURL Statistics

All cURL-based plugins support collection of generic, request-based
statistics. These are disabled by default and can be enabled selectively for
each page or URL queried from the curl, curl_json, or curl_xml plugins. See
the documentation of those plugins for specific information. This section
describes the available metrics that can be configured for each plugin. All
options are disabled by default.

See L<http://curl.haxx.se/libcurl/c/curl_easy_getinfo.html> for more details.

=over 4

=item B<TotalTime> B<true|false>

Total time of the transfer, including name resolving, TCP connect, etc.

=item B<NamelookupTime> B<true|false>

Time it took from the start until name resolving was completed.

=item B<ConnectTime> B<true|false>

Time it took from the start until the connect to the remote host (or proxy)
was completed.

=item B<AppconnectTime> B<true|false>

Time it took from the start until the SSL/SSH connect/handshake to the remote
host was completed.

=item B<PretransferTime> B<true|false>

Time it took from the start until just before the transfer begins.

=item B<StarttransferTime> B<true|false>

Time it took from the start until the first byte was received.

=item B<RedirectTime> B<true|false>

Time it took for all redirection steps include name lookup, connect,
pre-transfer and transfer before final transaction was started.

=item B<RedirectCount> B<true|false>

The total number of redirections that were actually followed.

=item B<SizeUpload> B<true|false>

The total amount of bytes that were uploaded.

=item B<SizeDownload> B<true|false>

The total amount of bytes that were downloaded.

=item B<SpeedDownload> B<true|false>

The average download speed that curl measured for the complete download.

=item B<SpeedUpload> B<true|false>

The average upload speed that curl measured for the complete upload.

=item B<HeaderSize> B<true|false>

The total size of all the headers received.

=item B<RequestSize> B<true|false>

The total size of the issued requests.

=item B<ContentLengthDownload> B<true|false>

The content-length of the download.

=item B<ContentLengthUpload> B<true|false>

The specified size of the upload.

=item B<NumConnects> B<true|false>

The number of new connections that were created to achieve the transfer.

=back

=head1 SEE ALSO

L<collectd(1)>,
L<collectd.conf(5)>

=cut

