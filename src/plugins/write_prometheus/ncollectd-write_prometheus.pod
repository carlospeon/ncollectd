=encoding UTF-8

=head1 NAME

ncollectd-write_prometheus - Documentation of ncollectd's C<write_prometheus plugin>

=head2 Plugin C<write_prometheus>

The I<write_prometheus plugin> implements a tiny webserver that can be scraped
using I<Prometheus>.

B<Options:>

=over 4

=item B<Host> I<Host>

Bind to the hostname / address I<Host>. By default, the plugin will bind to the
"any" address, i.e. accept packets sent to any of the hosts addresses.

This option is supported only for libmicrohttpd newer than 0.9.0.

=item B<Port> I<Port>

Port the embedded webserver should listen on. Defaults to B<9103>.

=item B<StalenessDelta> I<Seconds>

Time in seconds after which I<Prometheus> considers a metric "stale" if it
hasn't seen any update for it. This value must match the setting in Prometheus.
It defaults to B<300> seconds (5 minutes), same as Prometheus.

B<Background:>

I<Prometheus> has a global setting, C<StalenessDelta>, which controls after
which time a metric without updates is considered "stale". This setting
effectively puts an upper limit on the interval in which metrics are reported.

When the I<write_prometheus plugin> encounters a metric with an interval
exceeding this limit, it will inform you, the user, and provide the metric to
I<Prometheus> B<without> a timestamp. That causes I<Prometheus> to consider the
metric "fresh" each time it is scraped, with the time of the scrape being
considered the time of the update. The result is that there appear more
datapoints in I<Prometheus> than were actually created, but at least the metric
doesn't disappear periodically.

=back

=head1 SEE ALSO

L<collectd(1)>,
L<collectd.conf(5)>

=cut
